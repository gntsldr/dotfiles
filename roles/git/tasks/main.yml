---
- name: Git | Checking for distribution config | {{ ansible_distribution }}
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: git_distribution_config

- name: Git | Run tasks | {{ ansible_distribution }}
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: git_distribution_config.stat.exists

- name: Git | Set user.name
  community.general.git_config:
    name: user.name
    scope: global
    value: "{{ git_user_name }}"

- name: Git | Set user.email
  community.general.git_config:
    name: user.email
    scope: global
    value: "{{ git_user_email }}"
  no_log: true

- name: Git | Set user.signingkey
  community.general.git_config:
    name: user.signingkey
    scope: global
    value: "{{ ansible_user_dir }}/.ssh/id_ed25519.pub"

- name: Set core.pager to delta
  community.general.git_config:
    name: core.pager
    scope: global
    value: delta

- name: Set interactive.diffFilter to delta --color-only
  community.general.git_config:
    name: interactive.diffFilter
    scope: global
    value: delta --color-only

- name: Set delta.navigate to true
  community.general.git_config:
    name: delta.navigate
    scope: global
    value: true

# Uncomment and customize the following lines if needed
# - name: Set delta.dark to true
#   community.general.git_config:
#     scope: global
#     name: delta.dark
#     value: true
#
# - name: Set delta.light to true
#   community.general.git_config:
#     scope: global
#     name: delta.light
#     value: true

- name: Set merge.conflictstyle to diff3
  community.general.git_config:
    name: merge.conflictstyle
    scope: global
    value: diff3

- name: Set diff.colorMoved to default
  community.general.git_config:
    name: diff.colorMoved
    scope: global
    value: default

# - name: "Git | Set fetch.prune"
#   community.general.git_config:
#     name: fetch.prune
#     scope: global
#     value: true

# - name: "Git | Set init.defaultBranch"
#   community.general.git_config:
#     name: init.defaultBranch
#     scope: global
#     value: main

# - name: "Git | Set pull.rebase"
#   community.general.git_config:
#     name: pull.rebase
#     scope: global
#     value: true

# - name: "Git | Set rebase.autoStash"
#   community.general.git_config:
#     name: rebase.autoStash
#     scope: global
#     value: true
