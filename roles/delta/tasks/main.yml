---
- name: delta | Checking for distribution config | {{ ansible_distribution }}
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: delta_distribution_config

- name: delta | Run tasks | {{ ansible_distribution }}
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: delta_distribution_config.stat.exists

- name: delta | Download latest version JSON
  ansible.builtin.uri:
    url: https://api.github.com/repos/dandavison/delta/releases/latest
  register: delta_latest_version_json
  changed_when: false

- name: delta | Registering delta latest release
  ansible.builtin.set_fact:
    delta_latest_release: "{{ delta_latest_version_json.json.tag_name }}"

- name: delta | Registering delta latest version
  ansible.builtin.set_fact:
    delta_latest_version: "{{ delta_latest_release.stdout | default('') }}"

- name: delta | Getting version information
  ansible.builtin.shell:
    cmd: |
      /usr/local/bin/delta --version | cut -d ' ' -f 2
  register: current_delta_version
  changed_when: false
  failed_when: false

- name: delta | Registering delta Current Version
  ansible.builtin.set_fact:
    delta_current_version: "v{{ current_delta_version.stdout }}"

# - name: "delta | Show current_delta_version debug"
#   ansible.builtin.debug:
#     var: delta_current_version

# - name: "delta | Show delta_latest_release debug"
#   ansible.builtin.debug:
#     var: delta_latest_release

- name: delta | Install
  when: delta_latest_release not in delta_current_version|default('')
  block:
    - name: delta | Define delta_file
      ansible.builtin.set_fact:
        delta_file: "delta-{{ delta_latest_release }}-x86_64-unknown-linux-gnu"

    - name: delta | Downloading release
      ansible.builtin.get_url:
        url: https://github.com/dandavison/delta/releases/download/{{ delta_latest_release }}/{{ delta_file }}.tar.gz
        dest: /tmp/
        mode: '755'

    - name: delta | Check if a previous installation exists
      ansible.builtin.stat:
        path: /usr/local/bin/delta
      register: delta_binary

    - name: delta | Remove current installation
      ansible.builtin.file:
        path: /usr/local/bin/delta
        state: absent
      become: true
      when: delta_binary.stat.exists

    - name: delta | Extract tarball
      ansible.builtin.unarchive:
        src: /tmp/{{ delta_file }}.tar.gz
        dest: /tmp/
        creates: /tmp/{{ delta_file }}
        remote_src: true
      become: true

    - name: delta | Move binary
      ansible.builtin.copy:
        src: /tmp/{{ delta_file }}/delta
        dest: /usr/local/bin/delta
        mode: '755'
        directory_mode: '755'
        remote_src: true
      become: true

    - name: delta | Remove tarball
      ansible.builtin.file:
        path: /tmp/{{ delta_file }}.tar.gz
        state: absent
      become: true

    - name: delta | Remove temp folder
      ansible.builtin.file:
        path: /tmp/{{ delta_file }}
        state: absent
      become: true
