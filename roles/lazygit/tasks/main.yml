---
- name: lazygit | Checking for distribution config | {{ ansible_distribution }}
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: lazygit_distribution_config

- name: lazygit | Run tasks | {{ ansible_distribution }}
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: lazygit_distribution_config.stat.exists

- name: lazygit | Download latest version JSON
  ansible.builtin.uri:
    url: https://api.github.com/repos/jesseduffield/lazygit/releases/latest
  register: lazygit_latest_version_json
  changed_when: false

- name: lazygit | Registering lazygit latest release
  ansible.builtin.set_fact:
    lazygit_latest_release: "{{ lazygit_latest_version_json.json.tag_name }}"

- name: lazygit | Registering lazygit latest version
  ansible.builtin.set_fact:
    lazygit_latest_version: "{{ lazygit_latest_release.stdout | default('') }}"

- name: lazygit | Getting current version information
  ansible.builtin.shell:
    cmd: /usr/local/bin/lazygit --version | grep -oP 'version=\K[^,]+' | awk 'NR==1' | sed 's/^/v/'
  args:
    executable: /bin/bash
  register: current_lazygit_version
  changed_when: false
  failed_when: false

#- name: lazygit | Show current_lazygit_version debug
#  ansible.builtin.debug:
#    var: current_lazygit_version.stdout
#  when: current_lazygit_version.stat.exists

#- name: lazygit | Show lazygit_latest_release debug
#  ansible.builtin.debug:
#    var: lazygit_latest_release

- name: lazygit | Install
  when: lazygit_latest_release not in current_lazygit_version.stdout|default('')
  block:
    # regex_replace('^.', '') removes the first character from the string (the 'v' in the version number)
    - name: lazygit | Define lazygit filename
      ansible.builtin.set_fact:
        lazygit_file: "lazygit_{{ lazygit_latest_release | regex_replace('^.', '') }}_Linux_x86_64"

    - name: lazygit | Download latest lazygit Release
      ansible.builtin.get_url:
        url: "https://github.com/jesseduffield/lazygit/releases/download/{{ lazygit_latest_release }}/{{ lazygit_file }}.tar.gz"
        dest: /tmp/

    - name: lazygit | Check if a previous lazygit installation exists
      ansible.builtin.stat:
        path: /usr/local/bin/lazygit
      register: lazygit_folder

    - name: lazygit | Remove previous lazygit installation
      ansible.builtin.file:
        path: /usr/local/bin/lazygit
        state: absent
      become: true
      when: lazygit_folder.stat.exists

    - name: lazygit | Extract lazygit from tarball
      ansible.builtin.unarchive:
        src: "/tmp/{{ lazygit_file }}.tar.gz"
        dest: /usr/local/bin/
        creates: /usr/local/bin/lazygit
        remote_src: true
      become: true

    - name: lazygit | Remove lazygit tarball
      ansible.builtin.file:
        path: "/tmp/{{ lazygit_file }}.tar.gz"
        state: absent
