---
- name: fzf | Checking for distribution config | {{ ansible_distribution }}
  ansible.builtin.stat:
    path: "{{ role_path }}/tasks/{{ ansible_distribution }}.yml"
  register: fzf_distribution_config

- name: fzf | Run tasks | {{ ansible_distribution }}
  ansible.builtin.include_tasks: "{{ ansible_distribution }}.yml"
  when: fzf_distribution_config.stat.exists

- name: fzf | Download latest version JSON
  ansible.builtin.uri:
    url: https://api.github.com/repos/junegunn/fzf/releases/latest
  register: fzf_latest_version_json
  changed_when: false

- name: fzf | Registering fzf latest release
  ansible.builtin.set_fact:
    fzf_latest_release: "{{ fzf_latest_version_json.json.tag_name }}"

- name: fzf | Registering fzf latest version
  ansible.builtin.set_fact:
    fzf_latest_version: "{{ fzf_latest_release.stdout | default('') }}"

- name: fzf | Getting version information
  ansible.builtin.shell:
    cmd: |
      /usr/local/bin/fzf --version | cut -d ' ' -f 2
  register: current_fzf_version
  changed_when: false
  failed_when: false

- name: fzf | Registering fzf Current Version
  ansible.builtin.set_fact:
    fzf_current_version: "v{{ current_fzf_version.stdout }}"

# - name: "fzf | Show current_fzf_version debug"
#   ansible.builtin.debug:
#     var: fzf_current_version

# - name: "fzf | Show fzf_latest_release debug"
#   ansible.builtin.debug:
#     var: fzf_latest_release

- name: fzf | Install
  when: fzf_latest_release not in fzf_current_version|default('')
  block:
    - name: fzf | Define fzf_file
      ansible.builtin.set_fact:
        fzf_file: "fzf-{{ fzf_latest_release }}-linux_amd64"

    - name: fzf | Downloading release
      ansible.builtin.get_url:
        url: https://github.com/junegunn/fzf/releases/download/{{ fzf_latest_release }}/{{ fzf_file }}.tar.gz
        dest: /tmp/
        mode: '755'

    - name: fzf | Check if a previous installation exists
      ansible.builtin.stat:
        path: /usr/local/bin/fzf
      register: fzf_binary

    - name: fzf | Remove current installation
      ansible.builtin.file:
        path: /usr/local/bin/fzf
        state: absent
      become: true
      when: fzf_binary.stat.exists

    - name: fzf | Extract tarball
      ansible.builtin.unarchive:
        src: /tmp/{{ fzf_file }}.tar.gz
        dest: /usr/local/bin
        creates: /usr/local/bin/fzf
        owner: root
        group: root
        remote_src: true
      become: true

    - name: fzf | Remove tarball
      ansible.builtin.file:
        path: /tmp/{{ fzf_file }}.tar.gz
        state: absent
      become: true

- name: fzf-tab | Ensures plugins directory exists
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/zsh/plugins"
    state: directory
    mode: '755'

- name: fzf-tab | Ensures fzf-tab directory exists
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/zsh/plugins/fzf-tab"
    state: directory
    mode: '755'

- name: fzf-tab | Download fzf-tab
  ansible.builtin.git:
    repo: https://github.com/Aloxaf/fzf-tab
    dest: "{{ ansible_user_dir }}/.config/zsh/plugins/fzf-tab"
    force: true
